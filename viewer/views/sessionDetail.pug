ul.nav.nav-pills.mb-3
  if (session.rootId)
    li.nav-item
      a.nav-link(@click='allSessions(' + '"' + session.rootId + '"' + ', ' + session.firstPacket + ')') All Sessions
    li.nav-item
      a.nav-link(href=session.node + '/pcap/' + session.id + '.pcap', target="_blank") Download Segment Pcap
    li.nav-item
      a.nav-link(href=session.node + '/entirePcap/' + session.rootId + '.pcap', target="_blank") Download Entire Pcap
  else
    li.nav-item
      a.nav-link(href=session.node + '/pcap/' + session.id + '.pcap', target="_blank") Download Pcap
  li.nav-item
    a.nav-link(href=session.node + '/raw/' + session.id + '?type=src', target="_blank") Source Raw
  li.nav-item
    a.nav-link(href=session.node + '/raw/' + session.id + '?type=dst', target="_blank") Destination Raw
  li.nav-item
    a.nav-link(@click="openPermalink()", href='sessions?expression=id == ' + session.id + '&startTime=' + session.firstPacket + '&stopTime=' + session.lastPacket + '&openAll=1') Permalink
  li.nav-item.dropdown
    a.nav-link(data-toggle="dropdown", role="button") Actions &nbsp;
      span.fa.fa-caret-down
    // TODO dropdown menu
    ul.dropdown-menu.session-actions-menu

div.form-container

dl
  dt Id
  dd
    moloch-session-field(:expr="'id'", :value="session.id", :field="fields.id", :pull-left="true")
    if (session.rootId)
      strong.ml-4 Root Id:
      moloch-session-field(:expr="'rootId'", :value="session.rootId", :field="field.rootId", pull-left="true")

  dt Start
  dd
    moloch-session-field(:expr="'starttime'", :value=session.firstPacket, :field="fields.starttime", :pull-left="true")
    strong.ml-4.mr-1 Stop
    moloch-session-field(:expr="'stoptime'", :value=session.lastPacket, :field="fields.stoptime", :pull-left="true")

  dt
    +clickableLabel('node', 'Node')
  dd
    moloch-session-field(:expr="'node'", :value="session.node", :field="fields.node", :pull-left="true")

  +arrayList(session, "protocol", "Protocols", "protocols")

  dt
   +clickableLabel('ip.protocol', 'IP Protocol')
  dd
    moloch-session-field(:expr="'ip.protocol'", :value="session.ipProtocol", :field="fields['ip.protocol']", :pull-left="true")

  +arrayList(session, "user", "Users", "user")

  +arrayList(session, "asset", "Assets", "asset")

  // TODO dropdown menu
  if (session.srcBytes || session.dstBytes)
    dt
      div.btn-group.clickable-label
        button.btn.btn-xs.btn-default
          strong Src&nbsp;
          span.caret
        ul.dropdown-menu
          li
            a.cursor-pointer(@click="exportUnique('packets.src', 0)")
              | Export Unique Src Packets
          li
            a.cursor-pointer(@click="exportUnique('packets.src', 1)")
              | Export Unique Src Packets with counts
          li
            a.cursor-pointer(@click="openSpiGraph('packets.src')")
              | Open Src Packets SPI Graph
          li.divider
          li
            a.cursor-pointer(@click="exportUnique('bytes.src', 0)")
              | Export Unique Src Bytes
          li
            a.cursor-pointer(@click="exportUnique('bytes.src', 1)")
              | Export Unique Src Bytes with counts
          li
            a.cursor-pointer(@click="openSpiGraph('bytes.src')")
              | Open Src Bytes SPI Graph
          li.divider
          li
            a.cursor-pointer(@click="exportUnique('databytes.src', 0)")
              | Export Unique Src Databytes
          li
            a.cursor-pointer(@click="exportUnique('databytes.src', 1)")
              | Export Unique Src Databytes with counts
          li
            a.cursor-pointer(@click="openSpiGraph('databytes.src')")
              | Open Src Databytes SPI Graph
    dd
      strong.medium Packets
      moloch-session-field(:expr="'packets.src'", :value=session.srcPackets, :field="fields['packets.src']", :pull-left="true")
      strong.medium.ml-4 Bytes
      moloch-session-field(:expr="'bytes.src'", :value=session.srcBytes, :field="fields['bytes.src']", :pull-left="true")
      strong.medium.ml-4 Databytes
      moloch-session-field(:expr="'databytes.src'", :value=session.srcDataBytes, :field="fields['databytes.src']", :pull-left="true")

    dt
      div.btn-group.clickable-label
        button.btn.btn-xs.btn-default
          strong Dst&nbsp;
          span.caret
        ul.dropdown-menu
          li
            a.cursor-pointer(@click="exportUnique('packets.dst', 0)")
              | Export Unique Dst Packets
          li
            a.cursor-pointer(@click="exportUnique('packets.dst', 1)")
              | Export Unique Dst Packets with counts
          li
            a.cursor-pointer(@click="openSpiGraph('packets.dst')")
              | Open Dst Packets SPI Graph
          li.divider
          li
            a.cursor-pointer(@click="exportUnique('bytes.dst', 0)")
              | Export Unique Dst Bytes
          li
            a.cursor-pointer(@click="exportUnique('bytes.dst', 1)")
              | Export Unique Dst Bytes with counts
          li
            a.cursor-pointer(@click="openSpiGraph('bytes.dst')")
              | Open Dst Bytes SPI Graph
          li.divider
          li
            a.cursor-pointer(@click="exportUnique('databytes.dst', 0)")
              | Export Unique Dst Databytes
          li
            a.cursor-pointer(@click="exportUnique('databytes.dst', 1)")
              | Export Unique Dst Databytes with counts
          li
            a.cursor-pointer(@click="openSpiGraph('databytes.dst')")
              | Open Dst Databytes SPI Graph
    dd
      strong.medium Packets
      moloch-session-field(:expr="'packets.dst'", :value=session.dstPackets, :field="fields['packets.dst']", :pull-left="true")
      strong.medium.ml-4 Bytes
      moloch-session-field(:expr="'bytes.dst'", :value=session.dstBytes, :field="fields['bytes.dst']", :pull-left="true")
      strong.medium.ml-4 Databytes
      moloch-session-field(:expr="'databytes.dst'", :value=session.dstDataBytes, :field="fields['databytes.dst']", :pull-left="true")
